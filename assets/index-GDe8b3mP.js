(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))a(o);new MutationObserver(o=>{for(const s of o)if(s.type==="childList")for(const n of s.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&a(n)}).observe(document,{childList:!0,subtree:!0});function r(o){const s={};return o.integrity&&(s.integrity=o.integrity),o.referrerPolicy&&(s.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?s.credentials="include":o.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function a(o){if(o.ep)return;o.ep=!0;const s=r(o);fetch(o.href,s)}})();const $={"/":"home","/add":"createNew","/all":"all","/auth":"logIn"},I={basePath:"/new-cost",routeBtns:document.querySelectorAll(".nav > button"),pages:document.querySelectorAll(".page"),renderAllPage(){const e=this.getCurrentRoute(),t=$[e]||"home";this.pages.forEach(r=>{r.classList.toggle("hidden",!r.classList.contains(t))})},renderUpdateForm(){this.pages.forEach(e=>{e.classList.add("hidden"),e.classList.contains("createNew")&&e.classList.remove("hidden")})},updateActiveBtn(e){this.routeBtns.forEach(t=>{t.classList.remove("active"),t===e&&t.classList.add("active")})},getCurrentRoute(){const e=window.location.pathname;return e.startsWith(this.basePath)&&e.slice(this.basePath.length)||"/"}};/*! js-cookie v3.0.5 | MIT */function v(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var a in r)e[a]=r[a]}return e}var q={read:function(e){return e[0]==='"'&&(e=e.slice(1,-1)),e.replace(/(%[\dA-F]{2})+/gi,decodeURIComponent)},write:function(e){return encodeURIComponent(e).replace(/%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,decodeURIComponent)}};function w(e,t){function r(o,s,n){if(!(typeof document>"u")){n=v({},t,n),typeof n.expires=="number"&&(n.expires=new Date(Date.now()+n.expires*864e5)),n.expires&&(n.expires=n.expires.toUTCString()),o=encodeURIComponent(o).replace(/%(2[346B]|5E|60|7C)/g,decodeURIComponent).replace(/[()]/g,escape);var c="";for(var d in n)n[d]&&(c+="; "+d,n[d]!==!0&&(c+="="+n[d].split(";")[0]));return document.cookie=o+"="+e.write(s,o)+c}}function a(o){if(!(typeof document>"u"||arguments.length&&!o)){for(var s=document.cookie?document.cookie.split("; "):[],n={},c=0;c<s.length;c++){var d=s[c].split("="),f=d.slice(1).join("=");try{var l=decodeURIComponent(d[0]);if(n[l]=e.read(f,l),o===l)break}catch{}}return o?n[o]:n}}return Object.create({set:r,get:a,remove:function(o,s){r(o,"",v({},s,{expires:-1}))},withAttributes:function(o){return w(this.converter,v({},this.attributes,o))},withConverter:function(o){return w(v({},this.converter,o),this.attributes)}},{attributes:{value:Object.freeze(t)},converter:{value:Object.freeze(e)}})}var h=w(q,{path:"/"});const g={form:()=>document.querySelector("#createForm"),toggleCheckboxes:document.querySelector(".chooseCheckboxes"),getFormData(){const e=new FormData(this.form()),t={};return e.forEach((r,a)=>{t[a]=r}),t},setFormData({category:e}){for(const[t,r]of Object.entries(e)){const a=this.form().querySelector(`[name="${t}"`);if(a&&a.type==="radio"){const o=this.form().querySelector(`[name="${t}"][value="${r}"]`);o.checked=!0}else a&&(a.value=r)}},showMessage(e,t="success"){alert(`${t.toUpperCase()}: ${e}`)},changeMod(e="create"){const t=this.form(),a=document.querySelector(".createHead").querySelector("h2"),o=t.querySelector(".create"),s=t.querySelector(".delete");e==="update"?(a.textContent="Редактирование категории",o.textContent="Сохранить",s.classList.remove("hidden")):(a.textContent="Создание категории",o.textContent="Создать",s.classList.add("hidden"))}},p="http://localhost:8000/api",y={add:`${p}/category/update`,auth:`${p}/user/auth`,current:`${p}/user/current`,all:`${p}/category/all`,id:`${p}/category/id`,remove:`${p}/category/remove`},m=e=>({"Content-Type":"application/json",Authorization:`Bearer ${e}`}),E={apiEndpoint:y.add,data:{},setData(e){this.data={...e}},getData(){return this.data}},i={cards:()=>document.querySelectorAll(".card"),backBtn:document.querySelector(".back"),loader:document.querySelector(".loaderContainer"),categoryContainer:document.querySelector(".cards.all"),categoryContainerHome:document.querySelector(".cards.home"),toggleLoader(e){this.loader.classList.toggle("active",e)},clearCategories(){this.categoryContainerHome.innerHTML="",this.categoryContainer.innerHTML=""},renderCategories(e,t){e.forEach(r=>{const{trackMoney:a,trackMoneyCount:o,money:s,name:n,id:c,trackDay:d,trackDayCount:f}=r,{percentage:l,color:L}=this.calcTemp(s,o),D=Math.floor(s/f),S=`
              <div class="card travel" id="${c}">
                <div class="card__head">
                    <div class="card__name">${n}</div>
                    <div class="card__icon delete"></div>
                </div>
                <div class="card__body">
                    <div class="card__total"><span>${s}</span> ₽</div>
                    <div class="card__total track ${a?"":"hidden"}">${o} ₽</div>
                </div>
                <div class="card__temp ${a?"":"hidden"}">
                    <div class="card__currentTemp" style="width: ${l}%; background-color: ${L}" ></div>
                </div>
                <div class="card__days ${d?"":"hidden"}">
                    <div class="card__day">
                         <span>на <span class="card__dayItem">${D}</span> ${this.declensionDays(D)}}</span>
                         <span>если по <span class="card__dayItem">${f}</span></span>
                     </div>
                     
                </div>
              
                <div class="card__actions">
                    <input type="number" class="input">
                    <div class="btns">
                        <button class="add">Добавить</button>
                        <button class="remove">Отнять</button>
                    </div>
                </div>
            </div>
         
       
         `;t?this.categoryContainerHome.insertAdjacentHTML("beforeend",S):this.categoryContainer.insertAdjacentHTML("beforeend",S)})},renderDetailInfo(e){this.cards.forEach(t=>{t!==e&&t.classList.add("hidden")}),e.classList.add("selected"),this.backBtn.style.display="flex"},deleteDetailInfo(){this.cards.forEach(e=>{e.classList.remove("hidden"),e.classList.remove("selected")}),this.backBtn.style.display="none"},renderWalletInfo(e){this.cards.forEach(t=>{var o,s;let r=null,a=31;if(t.classList.contains("eat")&&(r="eat",a=5),t.classList.contains("travel")&&(r="travel"),t.classList.contains("cash")&&(r="cash"),t.classList.contains("bank")&&(r="bank"),r){const n=((o=e[r])==null?void 0:o.money)||0,c=((s=e[r])==null?void 0:s.rate)||1,d=t.querySelector(".card__total > span"),f=t.querySelector(".card__days");d.textContent=n;const l=Math.floor(n/c);r!=="bank"&&(this.renderTemp(l,a,t),r==="eat"?f.textContent=l<1?"0 дней":this.declensionWeeks(l):f.textContent=l<1?"0 дней":this.declensionDays(l))}})},calcTemp(e,t){const r=Math.min(100,e/t*100);let a;return r>=75?a="#1E90FF":r>=50?a="#6495ED":r>=25?a="#87CEEB":a="#C5D0E6",{percentage:r,color:a}},declensionDays(e){const t=e%10,r=e%100;return r>=11&&r<=19?`${e} дней`:t===1?`${e} день`:t>=2&&t<=4?`${e} дня`:`${e} дней`},declensionWeeks(e){const t=e%10,r=e%100;return r>=11&&r<=19?`${e} недель`:t===1?`${e} неделя`:t>=2&&t<=4?`${e} недели`:`${e} недель`}},u={apiAdd:y.add,apiGetAll:y.all,apiById:y.id,apiDelete:y.remove,async createOrUpdate(e){try{let t=h.get("token");const r=await fetch(this.apiAdd,{method:"POST",headers:m(t),body:JSON.stringify({...e})});if(!r.ok)throw new Error("Ошибка при создании или обновлении категории");return await r.json()}catch(t){throw console.error("Ошибка в создании или обновлении категории:",t),t}},async getAllCategory(){try{let e=h.get("token");const t=await fetch(this.apiGetAll,{method:"GET",headers:m(e)});if(!t.ok)throw new Error("Ошибка при получении всех категорий");return await t.json()}catch(e){throw console.error("Ошибка при получении всех категори:",e),e}},async getCategoryById(e){try{let t=h.get("token");const r=await fetch(`${this.apiById}`,{method:"POST",headers:m(t),body:JSON.stringify({id:e})});if(!r.ok)throw new Error("Ошибка при получении категории");return await r.json()}catch(t){throw console.error("Ошибка при получении категорий:",t),t}},async deleteCategory(e){try{let t=h.get("token");await fetch(`${this.apiDelete}`,{method:"DELETE",headers:m(t),body:JSON.stringify({id:e})})}catch(t){throw console.error("Ошибка в при удалении категорий:",t),t}}},C={model:u,view:i,form:document.querySelector("#createForm"),init(){this.updateCategories()},async getCategories(){this.data=await this.model.getAllCategory()},async updateCategories(){const e=await this.model.getAllCategory();this.view.clearCategories();const t=e.sort((a,o)=>a.id-o.id);this.view.renderCategories(t,!1);const r=t.filter(a=>a.favorite);this.view.renderCategories(r,!0),this.view.cards().forEach(a=>{a.addEventListener("click",async o=>{console.log(o.currentTarget),o.target.classList.contains("delete")?(await u.deleteCategory(+o.currentTarget.id),this.updateCategories()):(this.form.dataset.recordId=a.id,B.updateForm(),k.updateMode("update"))})})},async updateFafvoritesCategories(){},openDetailInfo(){i.cards.forEach(e=>{e.addEventListener("click",()=>i.renderDetailInfo(e))})},closeDetailInfo(){i.backBtn.addEventListener("click",()=>i.deleteDetailInfo())},updateWalletInfo(e){i.renderWalletInfo(e)},incrementWallet(){i.cards.forEach(e=>{const t=e.querySelector(".add"),r=e.querySelector("input");t.addEventListener("click",()=>{i.toggleLoader(!0),this.addMoney(e.id,+r.value),r.value="",i.toggleLoader(!1)})})},dicrementWallet(){i.cards.forEach(e=>{const t=e.querySelector(".remove"),r=e.querySelector("input");t.addEventListener("click",()=>{i.toggleLoader(!0),this.removeMoney(e.id,+r.value),r.value="",i.toggleLoader(!1)})})},async getWalletData(){try{i.toggleLoader(!0);const e=await u.getWallet();this.updateWalletInfo(e),i.toggleLoader(!1)}catch(e){console.error("Ошибка в контроллере (getWalletData):",e)}},async addMoney(e,t){try{const r=await u.addMoneyToCategory(e,t);this.getWalletData()}catch(r){console.error("Ошибка в контроллере (addMoney):",r)}},async removeMoney(e,t){try{const r=await u.removeMoneyToCategory(e,t);this.getWalletData()}catch(r){console.error("Ошибка в контроллере (addMoney):",r)}}},k={form:document.querySelector("#createForm"),view:g,model:E,init(){this.view.changeMod("create"),this.form.addEventListener("submit",e=>{e.preventDefault(),this.handleSubmit()}),this.handleDelete(),this.toggleDisplaySubField()},updateMode(e){e==="update"&&(this.recordId=this.form.dataset.recordId||void 0,this.recordId&&this.loadData(+this.recordId)),this.view.changeMod(e)},toggleDisplaySubField(){const t=document.querySelector(".chooseCheckboxes").querySelectorAll(".field ");t==null||t.forEach(r=>{const o=r.querySelector(".radio-group").querySelectorAll("input"),s=r.querySelector(".sub-field");o.forEach(n=>{n.checked&&(JSON.parse(n.value)?s.classList.remove("disabled"):s.classList.add("disabled")),n.addEventListener("click",()=>{s.classList.toggle("disabled",!JSON.parse(n.value))})})})},async loadData(e){try{const t=await u.getCategoryById(e);E.setData(t),this.view.setFormData(t),this.toggleDisplaySubField()}catch(t){this.view.showMessage("Ошибка при загрузке данных: "+t.message,"error")}},async handleDelete(){this.form.querySelector(".delete").addEventListener("click",async()=>{try{if(!this.recordId)return;await u.deleteCategory(+this.recordId),g.showMessage("Запись успешно удалена!"),this.form.reset(),C.updateCategories()}catch(t){g.showMessage(t.message,"error")}})},async handleSubmit(){const e=g.getFormData();e.favorite=document.querySelector(".isFavorite").checked,e.id=+this.recordId;try{let t;t=await u.createOrUpdate(e),this.recordId?g.showMessage("Запись успешно обновлена!"):g.showMessage("Запись успешно создана!"),this.form.reset(),C.updateCategories()}catch(t){g.showMessage(t.message,"error")}}},B={view:I,basePath:"/new-cost",init(){this.view.renderAllPage(),this.changePages(),window.addEventListener("popstate",()=>{this.view.renderAllPage()})},updateForm(){this.view.renderUpdateForm()},changePages(){this.view.routeBtns.forEach(e=>{e.addEventListener("click",()=>{h.get("token")?history.pushState({page:e.id},"",`${this.basePath}/${e.id}`):history.pushState({page:"auth"},"",`${this.basePath}/auth`),e.classList.contains("newCategory")&&(console.log(e),k.updateMode("create")),this.view.renderAllPage(),this.view.updateActiveBtn(e)})})}},A={form:document.querySelector("#logInForm"),homeBtn:document.querySelector(".homeCategory"),authBtn:document.querySelector(".settings"),logOutBtn:document.querySelector(".logOut"),getFormData(){const e=new FormData(this.form),t={};return e.forEach((r,a)=>{t[a]=r}),t},toggleAuthBtn(e){e?(this.authBtn.classList.add("hidden"),this.logOutBtn.classList.remove("hidden")):(this.authBtn.classList.remove("hidden"),this.logOutBtn.classList.add("hidden"))}},M={apiAuth:y.auth,apiCurrent:y.current,async auth(e){try{return await(await fetch(this.apiAuth,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})).json()}catch(t){throw new Error("Ошибка при создании записи: "+t.message)}},async current(){try{let e=h.get("token");return await(await fetch(this.apiCurrent,{method:"GET",headers:m(e)})).json()}catch(e){throw new Error("Ошибка при получении пользователя: "+e.message)}}},_={model:M,view:A,init(){this.view.form.addEventListener("submit",e=>{e.preventDefault(),this.handleSubmit()}),this.checkIsAuth(),this.logOut()},async handleSubmit(){const e=this.view.getFormData();try{const t=await this.model.auth(e);t.token&&(h.set("token",t.token),h.set("id",t.id)),this.view.form.reset(),this.view.homeBtn.click(),this.view.toggleAuthBtn(!0)}catch(t){console.log(t)}},async checkIsAuth(){try{(await this.model.current()).id?this.view.toggleAuthBtn(!0):(this.view.authBtn.click(),this.view.toggleAuthBtn(!1))}catch(e){console.log(e)}},async logOut(){this.view.logOutBtn.addEventListener("click",()=>{window.confirm("Вы уверены, что хотите выйти из приложения?")?(h.remove("token"),this.checkIsAuth()):console.log("Пользователь отменил выход")})}};B.init();k.init();_.init();C.init();
